syntax = "proto3";

service Master {
	rpc report (ReportMsg) returns (Reply) {}
}

service Worker {
  rpc start_vnode (VNodeInfo) returns (Reply) {}
	rpc start_task (TaskInfo) returns (Reply) {}
	rpc stop_task (TaskInfo) returns (Reply) {}
	rpc stop_vnode (VNodeInfo) returns (Reply) {}
}

message VNodeInfo {
	string taskid = 1;
	string username = 2;
	int32 vnodeid = 3;
	VNode vnode = 4;		// 集群配置
}

message Reply {
	ReplyStatus status = 1;	// 返回值
	string message = 2;

	enum ReplyStatus {
		ACCEPTED = 0;
		REFUSED = 1;
	}
}

message ReportMsg {
	repeated TaskMsg taskmsgs = 1;
}

message TaskMsg {
	string taskid = 1;
	string username = 2;
	int32 vnodeid = 3;
	Status subTaskStatus = 4; // 任务状态
	string token = 5;
	string errmsg = 6;
}

enum Status {
	WAITING = 0;
	RUNNING = 1;
	COMPLETED = 2;
	FAILED = 3;
	TIMEOUT = 4;
	OUTPUTERROR = 5;
}

message TaskInfo {
	string taskid = 1;
	string username = 2;
	int32 vnodeid = 3;
	Parameters parameters = 4;	// 参数
	int32 timeout = 5;			// 超时阈值
	string token = 6;
}

message Parameters {
	Command command = 1;			// 命令配置
	string stderrRedirectPath = 2;	// 错误输出重定向
	string stdoutRedirectPath = 3;	// 标准输出重定向
}

message Command {
	string commandLine = 1;				// 命令
	string packagePath = 2;				// 工作路径
	map<string, string> envVars = 3;	// 自定义环境变量
}

message VNode {
	Image image = 1;			// 镜像配置
	Instance instance = 2;		// 实例配置
	repeated Mount mount = 3;	// 挂载配置
  Network network = 4; //网络配置
}

message Network {
	string ipaddr = 1;
	string gateway = 2;
	string masterip = 3;
	string brname = 4;
}

message Image {
	string name = 1;	// 镜像名
	ImageType type = 2;	// 镜像类型（public/private)
	string owner = 3;	// 所有者

	enum ImageType {
	BASE = 0;
	PUBLIC = 1;
	PRIVATE = 2;
	}
}

message Mount {
	string provider = 1;
	string localPath = 2;	// 本地路径
	string remotePath = 3;	// 远程路径
	string accessKey = 4;
	string secretKey = 5;
	string other = 6;
}

message Instance {
	int32 cpu = 1;		// CPU，单位 个？
	int32 memory = 2;	// 内存，单位 mb
	int32 disk = 3;		// 磁盘，单位 mb
	int32 gpu = 4;		// 显卡，单位 个
}
